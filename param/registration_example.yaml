
registration_example:
  # stuff for the registration_client - if writing a custom client these lines are unnecessary
  topic:                  /laser_stitcher/full_scan #camera/depth/points
  load_cloud:             true
  initial_pause:          3.0
  betwixt_pause:          8.0
  bag_name_1:             /home/conor/ros_data/trees/15 ahg_between oak and cypress/laser_stitcher_1538945233.557749.bag # /home/conor/ros_data/trees/
  bag_name_2:             /home/conor/ros_data/trees/16 ahg between cypress and tml/laser_stitcher_1538945505.050285.bag
  introduce_error:        true
  introduced_error:       [0.00, -0.0, 0.0, 0.0, 0.0, 0.0]
  bag_name:               registered_cloud
  bag_topic:              /laser_stitcher/full_scan
  # registration stuff:
  registration_name:      icp
  transform_raw_clouds:   false
  loop_until_threshold:   true
  translation_threshold:  0.0005
  rotation_threshold:     0.001
  max_transform_loops:    25  
  point_type:             XYZI    # XYZ, XYZN, XYZRGB, XYZRGBN, XYZI, XYZNI
  feature_type:           XYZNI   # XYZ, XYZN, XYZRGB, XYZRGBN
  interest_point_type:    NONE    # NONE
  correspondence_type:    NONE    # NONE
  transformation_type:    ICP     # ICP, ICPNL, NDT
  # transformation parameters
  transform_epsilon:      0.0005
  transform_max_it:       35
  # feature algorithm parameters

  # registration algorithm parameters
  icp: 
    registration_type:    1
    epsilon:              0.0005
    max_iterations:       35
    ksearch:              30
    max_dist:             0.2
    alpha:                [1.0, 1.0, 1.0, 1.0]
  ndt: 
    registration_type:    2
    epsilon:              0.01
    max_iterations:       35
    step_size:            0.1
    resolution:           0.5
  # preprocessing stuff 
  preprocess:
    min_cloud_size:       50
    # NOTE - task names in task_list below MUST match the subheadings under the tasks heading
    task_list:            [ clip, voxelize ]
    tasks:
      to_base:
        type:             transform
        map_name:         base
      clip: 
        type:             clipping
        box:              [ -15, 15, -15, 15, -5, 12, 0, 0, 0, 0, 0, 0 ]
        keep_ordered:     true
      voxelize:           
        type:             voxelizing
        leaf_sizes:       [ 0.05, 0.05, 0.05 ]
        keep_ordered:     false
      to_map:
        type:             transform
        map_name:         map
  # postprocessing stuff
  postprocess:
    min_cloud_size:       50
    # NOTE - task names in task_list below MUST match the subheadings under the tasks heading
    task_list:            [ clip, voxelize ]
    tasks:
      clip: 
        type:             clipping
        box:              [-100, 100, -100, 100, -100, 100, 0, 0, 0, 0, 0, 0] #[ -6, 6, -2.1, 2.1, -1, 3.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        keep_ordered:     true
      voxelize:           
        type:             voxelizing
        leaf_sizes:       [ 0.0001, 0.0001, 0.0001 ]
        keep_ordered:     false